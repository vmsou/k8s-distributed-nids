apiVersion: v1
kind: PersistentVolume
metadata:
  name: hdfs-namenode-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/hdfs/namenode/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hdfs-namenode-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-namenode
spec:
  selector:
    matchLabels:
      app: hdfs-namenode # has to match .spec.template.metadata.labels
  serviceName: "hdfs-namenode"
  replicas: 1 # by default is 1
  minReadySeconds: 120 # by default is 0
  template:
    metadata:
      labels:
        app: hdfs-namenode # has to match .spec.selector.matchLabels
    spec:
      hostname: hdfs-namenode
      volumes:
        - name: hdfs-configmap
          configMap:
            name: hdfs-configmap
        - name: hdfs-namenode-data
          persistentVolumeClaim:
            claimName: hdfs-namenode-pvc
      initContainers:
      - name: init-chown-data
        image: busybox
        command: ['sh', '-c', 'chown -R 1000:100 /data/hdfs/namenode/', '&&', 'chmod -R 755 /data/hdfs/namenode/']
        volumeMounts:
        - mountPath: /data/hdfs/namenode/
          name: hdfs-namenode-data
      terminationGracePeriodSeconds: 120
      containers:
      - image: apache/hadoop:3.3.6
        name: hdfs-namenode
        resources:
           requests:
            memory: "512Mi"
            cpu: "500m"
           limits:
            memory: "768Mi"
            cpu: "750m"
        volumeMounts:
          - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
            name: hdfs-configmap
            subPath: core-site.xml
          - mountPath: /opt/hadoop/etc/hadoop/hdfs-site.xml
            name: hdfs-configmap
            subPath: hdfs-site.xml
          - mountPath: /data/hdfs/namenode/
            name: hdfs-namenode-data
            
        command: ["/bin/sh"]
        args: ["-c", "if [ ! -f /data/hdfs/namenode/.initialized ]; then hdfs namenode -format -force && touch /data/hdfs/namenode/.initialized; fi && exec hdfs namenode"]
---
apiVersion: v1
kind: Service
metadata:
  name: hdfs-namenode
spec:
  selector:
    app: hdfs-namenode
  clusterIP: None
  ports:
    - protocol: TCP
      name: hdfs-namenode-ui
      port: 9870
      targetPort: 9870
    - protocol: TCP
      name: hdfs-namenode-protocol
      port: 8020
      targetPort: 8020
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: hdfs-datanode-pv
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/hdfs/datanode/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hdfs-datanode-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-datanode
spec:
  selector:
    matchLabels:
      app: hdfs-datanode # has to match .spec.template.metadata.labels
  serviceName: "hdfs-datanode"
  replicas: 1 # by default is 1
  minReadySeconds: 120 # by default is 0
  template:
    metadata:
      labels:
        app: hdfs-datanode # has to match .spec.selector.matchLabels
    spec:
      volumes:
        - name: hdfs-configmap
          configMap:
            name: hdfs-configmap
        - name: hdfs-datanode-data
          persistentVolumeClaim:
            claimName: hdfs-datanode-pvc
      initContainers:
      - name: init-chown-data
        image: busybox
        command: ['sh', '-c', 'chown -R 1000:100 /data/hdfs/datanode', '&&', 'chmod -R 755 /data/hdfs/datanode']
        volumeMounts:
        - name: hdfs-datanode-data
          mountPath: /data/hdfs/datanode
      terminationGracePeriodSeconds: 120
      containers:
      - image: apache/hadoop:3.3.6
        name: hdfs-datanode
        resources:
           requests:
            memory: "512Mi"
            cpu: "500m"
           limits:
            memory: "768Mi"
            cpu: "750m"
        volumeMounts:
          - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
            name: hdfs-configmap
            subPath: core-site.xml
          - mountPath: /opt/hadoop/etc/hadoop/hdfs-site.xml
            name: hdfs-configmap
            subPath: hdfs-site.xml
          - mountPath: /data/hdfs/datanode
            name: hdfs-datanode-data

        command: ["hdfs", "datanode"]
---
apiVersion: v1
kind: Service
metadata:
  name: hdfs-datanode
spec:
  selector:
    app: hdfs-datanode
  clusterIP: None
  ports:
    - protocol: TCP
      name: hdfs-datanode-protocol
      port: 8081
      targetPort: 8081
---