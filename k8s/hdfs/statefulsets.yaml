apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-namenode
spec:
  selector:
    matchLabels:
      app: hdfs-namenode # has to match .spec.template.metadata.labels
  serviceName: "hdfs-namenode"
  replicas: 1
  minReadySeconds: 120 # by default is 0
  template:
    metadata:
      labels:
        app: hdfs-namenode # has to match .spec.selector.matchLabels
    spec:
      hostname: hdfs-namenode
      volumes:
        - name: hdfs-configmap
          configMap:
            name: hdfs-configmap
      initContainers:
      - name: init-chown-data
        image: busybox
        command: ['sh', '-c', 'chown -R 1000:100 /data/hdfs/namenode/', '&&', 'chmod -R 755 /data/hdfs/namenode/']
        volumeMounts:
        - mountPath: /data/hdfs/namenode/
          name: hdfs-namenode-data
      terminationGracePeriodSeconds: 120
      containers:
      - image: apache/hadoop:3.3.6
        name: hdfs-namenode
        resources:
           requests:
            memory: "512Mi"
            cpu: "500m"
           limits:
            memory: "768Mi"
            cpu: "750m"
        volumeMounts:
          - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
            name: hdfs-configmap
            subPath: core-site.xml
          - mountPath: /opt/hadoop/etc/hadoop/hdfs-site.xml
            name: hdfs-configmap
            subPath: hdfs-site.xml
          - mountPath: /data/hdfs/namenode/
            name: hdfs-namenode-data
            
        command: ["/bin/sh"]
        args: ["-c", "if [ ! -f /data/hdfs/namenode/current/VERSION ]; then hdfs namenode -format -force; fi && exec hdfs namenode"]

  volumeClaimTemplates:
  - metadata:
      name: hdfs-namenode-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
      storageClassName: hdfs-namenode-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-datanode
spec:
  selector:
    matchLabels:
      app: hdfs-datanode # has to match .spec.template.metadata.labels
  serviceName: "hdfs-datanode"
  replicas: 2
  podManagementPolicy: Parallel
  minReadySeconds: 120 # by default is 0
  template:
    metadata:
      labels:
        app: hdfs-datanode # has to match .spec.selector.matchLabels
    spec:
      volumes:
        - name: hdfs-configmap
          configMap:
            name: hdfs-configmap
      initContainers:
      - name: init-chown-data
        image: busybox
        command: ['sh', '-c', 'chown -R 1000:100 /data/hdfs/datanode', '&&', 'chmod -R 755 /data/hdfs/datanode']
        volumeMounts:
        - name: hdfs-datanode-data
          mountPath: /data/hdfs/datanode
      terminationGracePeriodSeconds: 120
      containers:
      - image: apache/hadoop:3.3.6
        name: hdfs-datanode
        resources:
           requests:
            memory: "512Mi"
            cpu: "500m"
           limits:
            memory: "768Mi"
            cpu: "750m"
        volumeMounts:
          - mountPath: /opt/hadoop/etc/hadoop/core-site.xml
            name: hdfs-configmap
            subPath: core-site.xml
          - mountPath: /opt/hadoop/etc/hadoop/hdfs-site.xml
            name: hdfs-configmap
            subPath: hdfs-site.xml
          - mountPath: /data/hdfs/datanode/
            name: hdfs-datanode-data

        command: ["hdfs", "datanode"]
  volumeClaimTemplates:
  - metadata:
      name: hdfs-datanode-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
      storageClassName: hdfs-datanode-storage