{{- if .Values.kafka.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-broker-svc" (include "kafka.name" .) }}
  namespace: {{ .Release.Namespace | quote }}
  labels: 
    {{- include "kafka.labels" . | nindent 4 }}
    app.kubernetes.io/component: broker
spec:
  type: {{ .Values.spark.service.type }}
  {{- if and .Values.spark.service.clusterIP (eq .Values.spark.service.type "ClusterIP") }}
  clusterIP: {{ .Values.spark.service.clusterIP }}
  {{- end }}
  {{- if and (eq .Values.kafka.service.type "LoadBalancer") (not (empty .Values.kafka.service.loadBalancerIP)) }}
  loadBalancerIP: {{ .Values.kafka.service.loadBalancerIP }}
  {{- end }}
  selector: 
    {{- include "kafka.selectorLabels" . | nindent 4}}
    app.kubernetes.io/component: broker
  ports:
  - name: internal
    port: {{ .Values.kafka.service.ports.internal }}
    {{- if and .Values.kafka.service.nodePorts.internal (or (eq .Values.kafka.service.type "NodePort") (eq .Values.kafka.service.type "LoadBalancer")) }}
    nodePort: {{ .Values.kafka.service.nodePorts.internal }}
    {{- end}}
  - name: kraft
    port: {{ .Values.kafka.service.ports.kraft }}
    {{- if and .Values.kafka.service.nodePorts.kraft (or (eq .Values.kafka.service.type "NodePort") (eq .Values.kafka.service.type "LoadBalancer")) }}
    nodePort: {{ .Values.kafka.service.nodePorts.kraft }}
    {{- end}}
  - name: controller
    port: {{ .Values.kafka.service.ports.controller }}
    {{- if and .Values.kafka.service.nodePorts.controller (or (eq .Values.kafka.service.type "NodePort") (eq .Values.kafka.service.type "LoadBalancer")) }}
    nodePort: {{ .Values.kafka.service.nodePorts.controller }}
    {{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-headless" (include "kafka.name" .) }}
  namespace: {{ .Release.Namespace | quote }}
  labels: 
    {{- include "kafka.labels" . | nindent 4}}
spec:
  type: ClusterIP
  clusterIP: None
  selector: 
    {{- include "kafka.selectorLabels" . | nindent 4}}
{{- end }}
